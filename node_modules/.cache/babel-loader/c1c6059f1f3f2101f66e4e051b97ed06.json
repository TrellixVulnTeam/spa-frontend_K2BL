{"ast":null,"code":"import { createStore, combineReducers } from 'redux'; // Parts for our state:\n// {\n//     users: []  // list of users\n//     user_form: { ... } // current user\n//                        // being edited\n// }\n\nfunction users(state = [], action) {\n  switch (action.type) {\n    case 'users/set':\n      return action.data;\n\n    default:\n      return state;\n  }\n}\n\nfunction user_form(state = {}, action) {\n  switch (action.type) {\n    case 'user_form/set':\n      return action.data;\n\n    default:\n      return state;\n  }\n}\n\nfunction posts(state = [], action) {\n  switch (action.type) {\n    case 'posts/set':\n      return action.data;\n\n    default:\n      return state;\n  }\n}\n\nfunction save_session(sess) {\n  let session = Object.assign({}, sess, {\n    time: Date.now()\n  });\n  localStorage.setItem(\"session\", JSON.stringify(session));\n}\n\nfunction load_session() {\n  let session = localStorage.getItem(\"session\");\n\n  if (!session) {\n    return null;\n  }\n\n  session = JSON.parse(session);\n  let age = Date.now() - session.time;\n  let hours = 60 * 60 * 1000;\n\n  if (age < 24 * hours) {\n    return session;\n  } else {\n    return null;\n  }\n}\n\nfunction session(state = load_session(), action) {\n  switch (action.type) {\n    case 'session/set':\n      save_session(action.data);\n      return action.data;\n\n    case 'session/clear':\n      return null;\n\n    default:\n      return state;\n  }\n}\n\nfunction error(state = null, action) {\n  switch (action.type) {\n    case 'error/set':\n      return action.data;\n\n    case 'session/set':\n      return null;\n\n    default:\n      return state;\n  }\n}\n\nfunction root_reducer(state, action) {\n  console.log(\"root reducer\", state, action);\n  /*\n    state1 = {\n    users: users(state.users, action),\n    uesr_form: user_form(state.user_form, action),\n    }\n  */\n\n  let redu = combineReducers({\n    users,\n    user_form,\n    posts,\n    session,\n    error\n  });\n  let state1 = redu(state, action);\n  console.log(\"state1\", state1);\n  return state1;\n}\n\nlet store = createStore(root_reducer);\nexport default store;","map":{"version":3,"sources":["/Users/jimhowe/Desktop/hw09-back-11/web-ui/src/store.js"],"names":["createStore","combineReducers","users","state","action","type","data","user_form","posts","save_session","sess","session","Object","assign","time","Date","now","localStorage","setItem","JSON","stringify","load_session","getItem","parse","age","hours","error","root_reducer","console","log","redu","state1","store"],"mappings":"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","sourcesContent":["\nimport { createStore, combineReducers } from 'redux';\n\n// Parts for our state:\n// {\n//     users: []  // list of users\n//     user_form: { ... } // current user\n//                        // being edited\n// }\n\nfunction users(state = [], action) {\n  switch (action.type) {\n    case 'users/set':\n      return action.data;\n    default:\n      return state;\n  }\n}\n\nfunction user_form(state = {}, action) {\n  switch (action.type) {\n    case 'user_form/set':\n      return action.data;\n    default:\n      return state;\n  }\n}\n\nfunction posts(state = [], action) {\n  switch (action.type) {\n    case 'posts/set':\n      return action.data;\n    default:\n      return state;\n  }\n}\n\nfunction save_session(sess) {\n  let session = Object.assign({}, sess, {time: Date.now()});\n  localStorage.setItem(\"session\", JSON.stringify(session));\n}\n\nfunction load_session() {\n  let session = localStorage.getItem(\"session\");\n  if (!session) {\n    return null;\n  }\n  session = JSON.parse(session);\n  let age = Date.now() - session.time;\n  let hours = 60*60*1000;\n  if (age < 24 * hours) {\n    return session;\n  }\n  else {\n    return null;\n  }\n}\n\nfunction session(state = load_session(), action) {\n  switch (action.type) {\n  case 'session/set':\n    save_session(action.data);\n    return action.data;\n  case 'session/clear':\n    return null;\n  default:\n    return state;\n  }\n}\n\nfunction error(state = null, action) {\n  switch (action.type) {\n  case 'error/set':\n    return action.data;\n  case 'session/set':\n    return null;\n  default:\n    return state;\n  }\n}\n\nfunction root_reducer(state, action) {\n  console.log(\"root reducer\", state, action);\n\n  /*\n    state1 = {\n    users: users(state.users, action),\n    uesr_form: user_form(state.user_form, action),\n    }\n  */\n  let redu = combineReducers(\n    {users, user_form, posts, session, error}\n  );\n\n  let state1 = redu(state, action);\n  console.log(\"state1\", state1);\n\n  return state1;\n}\n\nlet store = createStore(root_reducer);\nexport default store;\n"]},"metadata":{},"sourceType":"module"}